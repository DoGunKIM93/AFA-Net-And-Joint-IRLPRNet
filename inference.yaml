#################################################################################
#                            *** inference.yaml ***                             #
#################################################################################


#################################################################################
#                                     GENERAL                                   #
#################################################################################
general:
    #maxMemoryCachingSizeGB: 64
    #maxVRAMCachingSizeGB: 8 # will be devide by # of GPU
    GPUNum: 1 # comma-separated


#################################################################################
#                                       DATA                                    #
#################################################################################
data:
    path: 
        datasetPath: /home/jovyan/data-vol-1/dataset/
        pretrainedPath: /home/jovyan/data-vol-1/dataset/pretrained/
        

#################################################################################
#                                       MODEL                                   #
#################################################################################
model:
    General-SR-Perceptual:
        name: SPSR_Generator
        param: 4
        weight: SPSR-baseline-netG.pth
        valueRangeType: 0~1
        pre-processing:
            - toTensor()
        post-processing:

    General-SR-Perceptual-Robust:
        name: SPSR_Generator
        param: 4
        weight: SPSR-Robust-netG-General.pth
        valueRangeType: 0~1
        pre-processing:
            - toTensor()
        post-processing:

    General-SR-PSNR:
        name: EDVR
        param: 128, 1, 1, 5, 40
        weight: EDVR_SISR_general.pth 
        valueRangeType: 0~1
        pre-processing:
            - toTensor()
        post-processing:

    Face-SR:
        name: ESPCN
        param: 4
        weight: ESPCN-Face.pth
        valueRangeType: 0~1
        pre-processing:
            - toTensor()
        post-processing:

    Satellite-SR-Perceptual:
        name: SPSR_Generator
        param: 4
        weight: SPSR-netG-DOTA.pth
        pre-processing:
            - toTensor()
        post-processing:

    Satellite-SR-PSNR:
        name: EDVR
        param: 128, 1, 1, 5, 40
        weight: EDVR-DOTA.pth
        pre-processing:
            - toTensor()
        post-processing:

    Medical-SR-Perceptual:
        name: SPSR_Generator
        param: 4
        weight: SPSR-netG-CXR8.pth
        pre-processing:
            - toTensor()
        post-processing:

    Medical-SR-PSNR:
        name: EDVR
        param: 128, 1, 1, 5, 40
        weight: EDVR-CXR8.pth
        pre-processing:
            - toTensor()
        post-processing:
            
    Medical-SR-x4:
        name: DeFiAN
        param: 64, 20, 10, 4
        weight: DeFiAN_Medical_x4.pth
        valueRangeType: 0~1
        pre-processing:
            - toTensor()
        post-processing:

    Medical-SR-x8:
        name: DeFiAN
        param: 64, 20, 10, 8
        weight: DeFiAN_Medical_x8.pth
        valueRangeType: 0~1
        pre-processing:
            - toTensor()
        post-processing:

    General-SR-PSNR-Advanced-DeFiAN:
        name: DeFiAN
        param: 32, 10, 5, 4, 1
        weight: DeFiAN_S_x4.pth
        valueRangeType: 0~1
        pre-processing:
            - toRGB()
            #- JPEGCompress(0.1, 0.7):1.0
            #- resize(128,128, random)
            #- randomResize(16, 16, 32, 32, random, labelIndex=0, applyIndices=[0]) -> resize(32, 32, random, labelIndex=0, applyIndices=[0]):0.5

            #- horizontalFlip():1.0
            - toTensor()
        post-processing:
            #- toTensor()
            #- horizontalFlip() -> verticalFlip():1.0

    General-SR-PSNR-Advanced-DeFiAN-L:
        name: DeFiAN
        param: 64, 20, 10, 4, 1
        weight: DeFiAN_L_x4.pth
        valueRangeType: 0~1
        pre-processing:
            - toRGB()
            #- JPEGCompress(0.1, 0.7):1.0
            #- resize(128,128, random)
            #- randomResize(16, 16, 32, 32, random, labelIndex=0, applyIndices=[0]) -> resize(32, 32, random, labelIndex=0, applyIndices=[0]):0.5

            #- horizontalFlip():1.0
            - toTensor()
        post-processing:
            #- toTensor()
            #- horizontalFlip() -> verticalFlip():1.0

    General-SR-PSNR-Advanced-DRLN:
        name: DRLN
        param: 4
        weight: DRLN_BIX4.pth
        valueRangeType: 0~255
        pre-processing:
            - toRGB()
            - toTensor()
        post-processing:

    General-Deblur-Advanced:
        name: MPRNet
        param:
        weight: MPRNet_pretrained.pth
        valueRangeType: 0~1
        pre-processing:
            - toRGB()
            - toTensor()
        post-processing:
            
    General-PSNR-GOMTANG:
        name: DeFiAN
        param: 64, 20, 20, 4, 0
        weight: DeFiAN-GOMTANG.pth
        valueRangeType: 0~1
        pre-processing:
            - toRGB()
            - toTensor()
        post-processing:
            
    PASS:
        name: Empty
        valueRangeType: 0~1
        pre-processing:
            - toRGB()
            - resize(scaleFactor=0.25)
            #- JPEGCompress(0.9, 0.9, None)
            #- resize(scaleFactor=4)
            - toTensor()
        post-processing:

    JPEG:
        name: DeFiAN
        param: 32, 10, 5, 1, 0
        weight: DeFiAN-JPEG.pth
        valueRangeType: 0~1
        pre-processing:
            - toRGB()
            - toTensor()
        post-processing:
           

#for folder in ../Pytorch_Retinaface/data/widerface/val/images_small_unjpeg/*; do python inference.py -n General-SR-PSNR-Advanced-DeFiAN -i $folder -o ../Pytorch_Retinaface/data/widerface/val/images_sr_unjpeg/$(basename $folder); done